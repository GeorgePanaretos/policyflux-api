version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: onboarding-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  onboarding-service:
    build: ./onboarding-service
    container_name: onboarding-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}

#  questionnaire-service:
#    build: ./questionnaire-service
#    container_name: questionnaire-service
#    restart: unless-stopped
#    ports:
#      - "8081:8080"
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      DB_NAME: ${POSTGRES_DB}
#      DB_USERNAME: ${POSTGRES_USER}
#      DB_PASSWORD: ${POSTGRES_PASSWORD}
#
#  document-processor:
#    build: ./document-processor
#    container_name: document-processor
#    restart: unless-stopped
#    ports:
#      - "8082:8080"
#
#  risk-policy-engine:
#    build: ./risk-policy-engine
#    container_name: risk-policy-engine
#    restart: unless-stopped
#    ports:
#      - "8083:8080"

volumes:
  postgres_data: